class Solution {
    public int findPeakElement(int[] nums) {
        int n = nums.length;
        if(n==1) return 0; //if arr has only one element
        if(nums[0]>nums[1] )return 0; //for first element peak
        if(nums[n-1]>nums[n-2]) return n-1; //for last element peak

        // binary search now 

        int low=1;
        int high = n-2;
        while(low<=high){
        int mid = (low+high)/2;

        if (nums[mid] > nums[mid-1] && nums[mid] > nums[mid+1]){  // it means mid is the peak 
            return mid;
        }
        else if (nums[mid]>nums[mid-1]){  // it means the the graph is in  increasing order and the peak lies in right side 
            low = mid+1;
        } 
          else{
           high = mid-1;   // else the peak lies in left side 
        }
        }
return -1 ;
        
    }
    
}
